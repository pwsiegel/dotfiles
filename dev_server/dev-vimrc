" Plugins (via plugged)
call plug#begin('~/.vim/plugged')
Plug 'tpope/vim-abolish'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-unimpaired'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-ragtag'
Plug 'tpope/vim-commentary'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'flazz/vim-colorschemes'
Plug 'scrooloose/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'ervandew/supertab'
Plug 'davidhalter/jedi-vim'
" Plug 'ambv/black'
call plug#end()

" Basic Settings
filetype plugin indent on
syntax on
set nocompatible
set noswapfile
set hidden " Allow switching between unsaved buffers
syntax sync minlines=10000
set wildignore=*.pyc
set colorcolumn=88
set number
set hlsearch
set clipboard^=unnamed " copy to the system clipboard

" Cosmetics
set background=dark
let g:solarized_termtrans = 1
colorscheme solarized
set visualbell
set noerrorbells

" Mouse
set mouse=a
map <LeftMouse> <nop>
map <2-LeftMouse> <nop>

" Indentation
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab

" Map arrow keys to buffer switching
nnoremap <Left> :bp<CR>
nnoremap <Right> :bn<CR>
" But ignore when in nerdtree/ctrlsf
autocmd FileType nerdtree noremap <buffer> <Left> <nop>
autocmd FileType nerdtree noremap <buffer> <Right> <nop>
noremap <up> <nop>
noremap <down> <nop>

" Configure airline
let g:airline#extensions#ale#enabled = 1
" Install Roboto Light from https://github.com/powerline/fonts
let g:airline_powerline_fonts = 1
" Enable the list of buffers
let g:airline#extensions#tabline#enabled = 1
" Show just the filename
let g:airline#extensions#tabline#fnamemod = ':t'
" Status bar
let g:airline_theme='luna'

" Mappings
let mapleader=" "
nnoremap <leader>s :source ~/.vim/vimrc<CR>:nohls<CR>
nnoremap <leader>gs :Gstatus<CR>
nnoremap <leader>h :nohls<CR>
nnoremap <leader>c :bd<CR>
noremap <C-l> :tabn<CR>
noremap <C-h> :tabp<CR>
set pastetoggle=<leader>p

" Nerdtree
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
map <C-n> :NERDTreeToggle<CR>
let g:NERDTreeQuitOnOpen = 1

" Ctrlp
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git\|build'
let g:ctrlp_open_multiple_files = 'ij'
if executable("ag")
    let g:ctrlp_user_command = 'ag %s -l --nocolor --depth 8 -g ""'
endif

" Supertab / completion
let g:SuperTabDefaultCompletionType = "context"
let g:SuperTabContextDefaultCompletionType = "<C-n>"
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"
inoremap <expr> <Esc> pumvisible() ? "\<C-e>" : "\<Esc>"
set completeopt=longest,menuone

" Black
" autocmd BufWritePre *.py execute ':Black'
